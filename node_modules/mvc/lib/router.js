var Route = require("./route");
var stringUtil = require('./utils/string'),
	url = require('url'),
	oo = require('./utils/oo'),
    Config = require('./config');

var Router = {
	routesList: [],	
	addRoutes: function(configs){
		for(var i = 0, len = configs.length; i < len; i++){
			this.routesList.push(new Route(configs[i]));
		}
	},
	match: function(path){
		for(var i = 0, len = this.routesList.length; i < len; i++){
			if(this.routesList[i].match(path)){
				return this.routesList[i];
			}
		}		
		return false;
	},
	parseURL: function(urlString){
		var urlEntity = url.parse(urlString, true);
		var pathName = urlEntity.pathname;
		var query = urlEntity.query;

		var routeResult = this.match(pathName);
		if(routeResult){
			routeResult._params = oo.mix(routeResult._params, query);
		}
		
		return routeResult;
	},
	forward: function(intent){
		var controllerPath = this.getControllerPath(Config.app_path, intent.controllerName);
		try{
			var RefController = require(controllerPath);
			new RefController(intent).run();
		}catch(ex){
			console.log(ex.stack);
            if(intent.controllerName == 'error'){
                return;
            }
			intent.params = {message: 'Controller NOT Found!', info:{
				controllerName: intent.controllerName,
				actionName: intent.actionName
			}};
			intent.controllerName = 'error';
			intent.actionName = 'index';
			intent.statusCode = 404;
			this.forward(intent);
		}
	},

	dispatch: function(intent){
		var routeResult = this.parseURL(intent.url);
		if(!routeResult){
			intent.controllerName = "error";
			intent.actionName = "index";
			intent.statusCode = 404;
			intent.params = {message: "NO Matched Route", info: {}};
			intent.request.addParams(intent.params);
		}else{
			intent.controllerName = routeResult.getController();
			intent.actionName = routeResult.getAction();
			intent.params = routeResult.getParams();
			intent.request.addParams(intent.params);
			intent.statusCode = 200;
		}

		intent.request.setControllerName(intent.controllerName);
		intent.request.setActionName(intent.actionName);
		intent.response.setStatus(intent.statusCode);

		this.forward(intent);
	},

	getControllerPath: function(appPath, controllerName){
		return appPath + 
			'/controllers/' + 
			stringUtil.dashToUnderScore(controllerName) + 
			'_controller.js';
	}
};

module.exports = Router;